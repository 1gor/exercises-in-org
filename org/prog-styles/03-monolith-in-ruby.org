#+TITLE: Monolith in Ruby
#+TODO: TODO | DONE CANCELED
#+content: showeverything

*** Constraints

1. Remove the punctuations signs =.';\-"\_=
2. Remove the empty spaces
3. Accumulate each one of the words in a hash
4. Sort by key
5. Reverse the list
6. Flush to stdout
  
*** Implementation

Brain dump!

# :dir ../..

#+BEGIN_SRC ruby  :results output :tangle src
  SRC_ROOT = File.join(File.expand_path("."), "src", "exercises-in-programming-style")

  @stop_words = File.read(File.join(SRC_ROOT, 'stop_words.txt')).split(',')
  @words = Hash.new {|h,k| h[k] = 0 }
  
  File.read(File.join(SRC_ROOT, "pride-and-prejudice.txt")).each_line do |line|
   line.gsub!(/[,.';\-"\_]/, " ")
    words = line.split(" ")
    words.each do |w|
      next if @stop_words.include?(w.downcase)
      @words[w.downcase] += 1
    end
  end
  
  @words.sort {|a,b| a[1] <=> b[1]}.reverse[0..25].each do |k, v|
    puts "#{k}  -  #{v}"
  end
#+END_SRC

#+RESULTS:
#+begin_example
mr  -  786
s  -  658
elizabeth  -  631
very  -  488
darcy  -  397
such  -  395
mrs  -  343
much  -  326
more  -  326
bennet  -  316
bingley  -  300
jane  -  288
miss  -  283
one  -  274
know  -  239
before  -  227
though  -  226
herself  -  226
well  -  221
never  -  220
soon  -  216
sister  -  211
think  -  209
now  -  208
time  -  203
good  -  200
#+end_example
